<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns:geocodingand-search-api="http://www.mulesoft.org/schema/mule/geocodingand-search-api" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/geocodingand-search-api http://www.mulesoft.org/schema/mule/geocodingand-search-api/current/mule-geocodingand-search-api.xsd
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd">
    <http:listener-config name="weather-api-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="weather-api-config" api="resource::32d03fab-135c-4f0a-81f6-db597655fab4:weather-api:1.0.3:raml:zip:weather-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="4e7bac46-306e-433b-bcfd-bdc78d188268">
        <http:request-connection protocol="HTTPS" host="ipxapi.com" />
    </http:request-config>
    <http:request-config name="HTTP_Request_configuration1" doc:name="HTTP Request configuration" doc:id="492978f6-bc81-414c-b19b-caee39cdd630">
        <http:request-connection protocol="HTTPS" host="api.openweathermap.org" />
    </http:request-config>
    <configuration-properties doc:name="Configuration properties" doc:id="0e1475b3-9f36-4feb-b30b-5ac0006f047c" file="prop.properties" />
    <http:request-config name="HTTP_Request_configuration2" doc:name="HTTP Request configuration" doc:id="616d388d-7498-4fe7-9935-8a0e61b84f7a" >
		<http:request-connection host="zipcodeapi.com" />
	</http:request-config>
	<api-gateway:autodiscovery apiId="${apiId}" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="8b8978ed-0333-48b0-ad6d-69ddc7ecf771" flowRef="weather-api-main" />
	<flow name="weather-api-main">
        <http:listener config-ref="weather-api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="weather-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="weather-api-console">
        <http:listener config-ref="weather-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="weather-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\weather:weather-api-config">
        <ee:transform doc:name="Set Var" doc:id="ff8a347b-1e85-47f7-935f-148dd30dca80">
            <ee:message />
            <ee:variables>
                <ee:set-variable variableName="zipCode"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.zipCode]]></ee:set-variable>
                <ee:set-variable variableName="ip"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.ip]]></ee:set-variable>
                <ee:set-variable variableName="state"><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.state]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <choice doc:name="Choice" doc:id="9f8b6b76-ba96-4446-bdb2-cf0f9240c6e5">
            <when expression="#[attributes.queryParams.ip != null]">
                <http:request method="GET" doc:name="ipxapi Request" doc:id="a0155f2e-568a-4e20-9fcd-d4d32046a857" config-ref="HTTP_Request_configuration" path="#[p('ipx_path') ++ vars.ip]">
                    <http:headers><![CDATA[#[output application/json
---
{
	'Authorization': 'Bearer 3855|oyUdr5Z3lBtsA6bNdFYRMKQfPIAViZ9GEoL4GP3j'
}]]]></http:headers>
                </http:request>
                <ee:transform doc:name="Transform Message" doc:id="270b3c02-2cd3-44d3-92eb-097e8fce254c">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	
	country:payload.countryCode,
	city:payload.city,
	state:payload.regionName,
	zip:payload.zip,
	lat:payload.lat,
	lon:payload.lon
	
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="regionName"><![CDATA[%dw 2.0
output application/java
---
payload.regionName ]]></ee:set-variable>
                        <ee:set-variable variableName="region"><![CDATA[%dw 2.0
output application/java
---
{
	RegionName:payload.regionName,
	city:payload.city,
	zip:payload.zip
	
}]]></ee:set-variable>
                        <ee:set-variable variableName="zipCode"><![CDATA[%dw 2.0
output application/java
---
payload.zip]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </when>
            <when expression="#[attributes.queryParams.zipCode != null]">
                <http:request method="GET" doc:name="Request" doc:id="8770cca1-b830-4f79-ac70-5dc63eab6a1a" config-ref="HTTP_Request_configuration2" path="#[p('zipcodepath')++ p('zipcodekey')++'/info.json/'++(vars.zipCode)++'/radians']"/>
				<ee:transform doc:name="Copy_of_Transform Message" doc:id="52032fa9-3723-4b84-87da-baa63c3b64a5">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.4
output application/json
fun getRegionData (string) = 
string match {
case "AL" -> "Alabama"
case "AK" -> "Alaska"
case "AZ" -> "Arizona"
case "AR" -> "Arkansas"
case "Ca" -> "California"
case "CO" -> "Colorado"
case "CT" -> "Connecticut"
case "FL" -> "Florida"
case "GA" -> "Georgia"
case "IL" -> "Illinois"
case "KS" -> "Kansas"
case "MI" -> "Michigan"
case "NJ" -> "New Jersey"
case "TX" -> "Texas"
	

else ->[""]
	
}
---
{
	
	country:"US",
	city:payload.city,
	state:getRegionData(payload.state),
	zip:payload.zip_code,
	lat:payload.lat,
	lon:payload.lng
	
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="zipCode"><![CDATA[%dw 2.0
output application/java
---
payload.zip_code]]></ee:set-variable>
                        <ee:set-variable variableName="city"><![CDATA[%dw 2.0
output application/json
---
payload.city]]></ee:set-variable>
						<ee:set-variable variableName="regionName" ><![CDATA[%dw 2.4
output application/json
fun getRegionData (string) = 
string match {
case "AL" -> "Alabama"
case "AK" -> "Alaska"
case "AZ" -> "Arizona"
case "AR" -> "Arkansas"
case "Ca" -> "California"
case "CO" -> "Colorado"
case "CT" -> "Connecticut"
case "FL" -> "Florida"
case "GA" -> "Georgia"
case "IL" -> "Illinois"
case "KS" -> "Kansas"
case "MI" -> "Michigan"
case "NJ" -> "New Jersey"
case "TX" -> "Texas"
	

else ->"OverRide"
	
}
---
getRegionData(payload.state)]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </when>
            <otherwise>
                <raise-error doc:name="Raise error" doc:id="2346a206-6aa5-469a-bf32-95d4787b0c36" type="INPUTPARM:INPUT_PARM_ERROR" description="INPUT PARAMETER IS NOT ALLOWED, MISSING OR INVALID. " />
            </otherwise>
        </choice>
		<logger level="INFO" doc:name="Logger" doc:id="f1e0dcc0-ce23-46d2-9c67-4116f8a80efd" />
        <choice doc:name="Choice" doc:id="5ee0180e-fff2-4b9d-9635-cb422f23d0c2">
            <when expression="#[[p('regionName')] [0] contains vars.regionName]">
				<http:request method="GET" doc:name="zipCode Request" doc:id="b29f4ff6-e846-4df4-8668-dae9f55acb3e" config-ref="HTTP_Request_configuration1" path="#['/data/2.5/weather?lat='++ payload.lat ++ '&amp;lon=' ++ payload.lon ++ '&amp;units=Imperial' &#xA;++ '&amp;appid=' ++ 'a8b821904772a1750cb261f2f494ca90']" />
				<ee:transform doc:name="Transform Message" doc:id="5fd99695-a69c-4264-ac47-11a36e3ef9b1" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{ 
	country:"US",
	city:vars.city default vars.region.city,
	state:vars.regionName,
	zipcode:vars.zipCode,
	High_Temp:payload.main.temp_max,
	Low_Temp:payload.main.temp_min,
	Current_Temp:payload.main.temp,
	Current_Outlook:payload.weather.main[0]
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise>
                <raise-error doc:name="Raise error" doc:id="5af7b46d-bb91-43de-aca4-d5b2b04b2cab" type="ZIPOVERRIDE:ZIP_CODE-OVERRIDE" description="WEATHER CHECK FOR INPUT ZIPCODE NOT ALLOWED" />
            </otherwise>
        </choice>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="91c8be08-7f8a-44a8-b516-98fc9c81d2b6" type="INPUTPARM:INPUT_PARM_ERROR">
				<logger level="INFO" doc:name="Logger" doc:id="88816ea6-324b-4c5b-b5d5-2b73cb095d2b" />
				<ee:transform doc:name="Transform Message" doc:id="5c5c996e-be93-4563-8525-e3245b7e8648" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	error:error.errorType.asString,
	description:error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="afbc7b58-3fcf-43dc-be31-24b27a8029ed" type="ZIPOVERRIDE:ZIP_CODE-OVERRIDE">
				<logger level="INFO" doc:name="Logger" doc:id="d6372454-d90b-49f1-98b9-4236d5dafab3" />
				<ee:transform doc:name="Transform Message" doc:id="20018db1-f0a3-4ad5-a76d-f727caa80afb" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	error:error.errorType.asString,
	description:error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="67087c48-ac4b-4edf-a465-02bb2aceb5fd" type="ANY">
				<logger level="INFO" doc:name="Logger" doc:id="15448c02-5610-46c0-aef0-1ddb999b6a09" />
				<ee:transform doc:name="Transform Message" doc:id="db39c8a2-8195-4305-9e0e-a16fa156e49c" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	error:error.errorType.asString,
	description:error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
    </flow>
</mule>
